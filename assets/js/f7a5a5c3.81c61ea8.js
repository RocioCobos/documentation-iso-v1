/*! For license information please see f7a5a5c3.81c61ea8.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[84156],{7656:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(74848),r=t(28453),a=t(39164);const i={sidebar_position:4},l="Delete Rates",o={id:"apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up/delete-rates-set-up",title:"Delete Rates",description:"The deleteRatesSetUp is designed to remove hotel rates from a client - seller relation in Inventory. The returned fields include:",source:"@site/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up/delete-rates-set-up.mdx",sourceDirName:"apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up",slug:"/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up/delete-rates-set-up",permalink:"/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up/delete-rates-set-up",draft:!1,unlisted:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up/delete-rates-set-up.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Create Rates",permalink:"/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rates-set-up/create-rates-set-up"},next:{title:"Rooms",permalink:"/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/rooms-set-up/"}},c={},d=[{value:"Mutation Inputs",id:"mutation-inputs",level:2},{value:"1. Input",id:"1-input",level:3},{value:"Requests Examples",id:"requests-examples",level:3},{value:"Delete a Rate",id:"delete-a-rate",level:4}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{GraphqlSample:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GraphqlSample",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"delete-rates",children:"Delete Rates"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"deleteRatesSetUp"})," is designed to remove hotel rates from a client - seller relation in Inventory. The returned fields include:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"adviseMessages"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mutation-inputs",children:"Mutation Inputs"}),"\n",(0,s.jsxs)(n.p,{children:["When creating your ",(0,s.jsx)(n.code,{children:"deleteRatesSetUp"})," mutation, you have 1 input to fill based on your specific needs:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Input"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"1-input",children:"1. Input"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Mandatory input"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"clientCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"supplierCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"hotelCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"rateCodes"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Optional input"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"contextCode"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"requests-examples",children:"Requests Examples"}),"\n",(0,s.jsx)(n.h4,{id:"delete-a-rate",children:"Delete a Rate"}),"\n",(0,s.jsx)(t,{query:a.Lv,variables:a.Rd})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},39164:(e,n,t)=>{t.d(n,{DL:()=>r,KH:()=>a,Lv:()=>l,Rd:()=>o,Te:()=>s,_H:()=>i});const s="mutation ($input: InventoryRateSetupUpdateInput!) {\n  inventory {\n    updateRateSetup(rateSetupUpdateInput: $input) {\n      ratesUpdated {\n        code\n        name\n        hotelCode\n        active\n        mealPlanIncluded\n        agePolicies {\n          maxAgeChildren\n          maxAgeInfants\n          freeInfants\n          freeChildren\n        }\n        paymentPolicies {\n          currency\n          commission\n          priceIsBinding\n          acceptedPayments {\n            type\n            cardTypes\n          }\n        }\n        bookingRules {\n          bookingWindow {\n            start\n            end\n          }\n          markets {\n            included\n            excluded\n          }\n          rateRule\n          seniorRule\n        }\n        cancelPolicies {\n          baseCancelPolicy {\n            refundable\n            cancelPenalties {\n              daysBeforeArrival\n              penaltyType\n              value\n            }\n          }\n          cancelPoliciesByDate {\n            start\n            end\n            cancelPolicy {\n              refundable\n              cancelPenalties {\n                daysBeforeArrival\n                penaltyType\n                value\n              }\n            }\n          }\n        }\n        surcharges {\n          chargeType\n          taxType\n          value\n          applyType\n          perNight\n          perPax\n        }\n        rooms {\n          code\n          master {\n            id\n            code\n            name\n          }\n          active\n          externalCode\n          standard\n          uses {\n            numberOfGuests\n            paxType\n          }\n        }\n      }\n      success\n      adviseMessages {\n        code\n        description\n        level\n        external {\n          code\n          message\n        }\n      }\n    }\n  }\n}",r='{\n    "input": {\n        "clientCode": "CDOC",\n        "supplierCode": "PDOC",\n        "hotelCode": "2",\n        "contextCode": "TGX_PUSH",\n        "rates": [\n            {\n                "code": "BAR",\n                "mealPlanIncluded": 14,\n                "cancelPolicies": {\n                    "baseCancelPolicy": {\n                        "refundable": true,\n                        "cancelPenalties": [\n                            {\n                                "daysBeforeArrival": 1,\n                                "penaltyType": "PERCENTAGE",\n                                "value": 100\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    }\n}',a="mutation ($input: InventoryRatesSetupCreateInput!) {\n  inventory {\n    createRatesSetup(rateSetupCreateInput: $input) {\n      rates {\n        code\n        name\n        hotelCode\n        active\n        mealPlanIncluded\n        agePolicies {\n          maxAgeChildren\n          maxAgeInfants\n          freeInfants\n          freeChildren\n        }\n        paymentPolicies {\n          currency\n          commission\n          priceIsBinding\n          acceptedPayments {\n            type\n            cardTypes\n          }\n        }\n        bookingRules {\n          bookingWindow {\n            start\n            end\n          }\n          markets {\n            included\n            excluded\n          }\n          rateRule\n          seniorRule\n        }\n        cancelPolicies {\n          baseCancelPolicy {\n            refundable\n            cancelPenalties {\n              daysBeforeArrival\n              penaltyType\n              value\n            }\n          }\n          cancelPoliciesByDate {\n            start\n            end\n            cancelPolicy {\n              refundable\n              cancelPenalties {\n                daysBeforeArrival\n                penaltyType\n                value\n              }\n            }\n          }\n        }\n        surcharges {\n          chargeType\n          taxType\n          value\n          applyType\n          perNight\n          perPax\n        }\n        rooms {\n          code\n          master {\n            id\n            code\n            name\n          }\n          active\n          externalCode\n          standard\n          uses {\n            numberOfGuests\n            paxType\n          }\n        }\n      }\n      success\n      adviseMessages {\n        code\n        description\n        level\n        external {\n          code\n          message\n        }\n      }\n    }\n  }\n}",i='{\n    "input": {\n        "clientCode": "CDOC",\n        "supplierCode": "PDOC",\n        "hotelCode": "2",\n        "contextCode": "TGX_PUSH",\n        "rates": [\n            {\n                "code": "BAR",\n                "name": "Best Available Rate",\n                "active": true,\n                "agePolicies": {\n                    "maxAgeChildren": 12,\n                    "maxAgeInfants": 2,\n                    "freeInfants": false,\n                    "freeChildren": false\n                },\n                "mealPlanIncluded": 14,\n                "paymentPolicies": {\n                    "currency": "EUR",\n                    "commission": 10,\n                    "priceIsBinding": true,\n                    "acceptedPayments": [\n                        {\n                            "type": "CARD_BOOKING",\n                            "cardTypes": ["VI", "CA"]\n                        }\n                    ]\n                },\n                "cancelPolicies": {\n                    "baseCancelPolicy": {\n                        "refundable": true,\n                        "cancelPenalties": [\n                            {\n                                "daysBeforeArrival": 7,\n                                "penaltyType": "PERCENTAGE",\n                                "value": 30\n                            },\n                            {\n                                "daysBeforeArrival": 1,\n                                "penaltyType": "PERCENTAGE",\n                                "value": 100\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    }\n}',l="mutation ($input: InventoryRateSetupDeleteInput!) {\n  inventory {\n    deleteRatesSetup(rateSetupDeleteInput: $input) {\n      success\n      adviseMessages {\n        code\n        description\n        level\n        external {\n          code\n          message\n        }\n      }\n    }\n  }\n}",o='{\n    "input": {\n        "clientCode": "CDOC",\n        "supplierCode": "PDOC",\n        "hotelCode": "2",\n        "contextCode": "TGX_PUSH",\n        "rateCodes": ["BAR"]\n    }\n}'},21020:(e,n,t)=>{var s=t(96540),r=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,l=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var s,a={},c=null,d=null;for(s in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(d=n.ref),n)i.call(n,s)&&!o.hasOwnProperty(s)&&(a[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===a[s]&&(a[s]=n[s]);return{$$typeof:r,type:e,key:c,ref:d,props:a,_owner:l.current}}n.Fragment=a,n.jsx=c,n.jsxs=c},74848:(e,n,t)=>{e.exports=t(21020)},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(96540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);