/*! For license information please see 9f72a855.8529ca83.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[37832],{97778:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>p,default:()=>c,frontMatter:()=>i,metadata:()=>u,toc:()=>l});var s=t(74848),r=t(28453),o=t(67288);const i={sidebar_position:4},p="Delete Offers",u={id:"apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up/delete-offers-set-up",title:"Delete Offers",description:"The deleteOffersSetUp is designed to remove offers from hotel rates in Inventory. The returned fields include:",source:"@site/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up/delete-offers-set-up.mdx",sourceDirName:"apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up",slug:"/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up/delete-offers-set-up",permalink:"/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up/delete-offers-set-up",draft:!1,unlisted:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up/delete-offers-set-up.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Create Offers",permalink:"/docs/apis/for-buyers/inventory-buyers/inventory-set-up-graphql-api/set-up/offers-set-up/create-offers-set-up"},next:{title:"Quickstart",permalink:"/docs/apis/for-buyers/inventory-buyers/inventory-set-up-csv-api/quickstart"}},d={},l=[{value:"Mutation Inputs",id:"mutation-inputs",level:2},{value:"1. Input",id:"1-input",level:3},{value:"Requests Examples",id:"requests-examples",level:3},{value:"Delete a Offer",id:"delete-a-offer",level:4}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{GraphqlSample:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GraphqlSample",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"delete-offers",children:"Delete Offers"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"deleteOffersSetUp"})," is designed to remove offers from hotel rates in Inventory. The returned fields include:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"success"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"adviseMessages"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mutation-inputs",children:"Mutation Inputs"}),"\n",(0,s.jsxs)(n.p,{children:["When creating your ",(0,s.jsx)(n.code,{children:"deleteOffersSetUp"})," mutation, you have 1 input to fill based on your specific needs:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Input"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"1-input",children:"1. Input"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Mandatory input"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"clientCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"supplierCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"hotelCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"rateCode"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"offerCodes"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Optional input"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"contextCode"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"requests-examples",children:"Requests Examples"}),"\n",(0,s.jsx)(n.h4,{id:"delete-a-offer",children:"Delete a Offer"}),"\n",(0,s.jsx)(t,{query:o.Zo,variables:o.Rj})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},67288:(e,n,t)=>{t.d(n,{CC:()=>o,Rj:()=>u,T3:()=>r,Zo:()=>p,vs:()=>s,yK:()=>i});const s="mutation ($input: InventoryOffersSetupUpdateInput!) {\n  inventory {\n    updateOffersSetup(offersSetupUpdateInput: $input) {\n      offers {\n        code\n        description\n        isActive\n        rateCode\n        roomCodes\n        mon\n        tue\n        wed\n        thu\n        fri\n        sat\n        sun\n        applyFrom\n        applyTo\n        numberOfNights\n        minLos\n        maxLos\n        nightsType\n      }\n      success\n      adviseMessages {\n        code\n        description\n        level\n        external {\n          code\n          message\n        }\n      }\n    }\n  }\n}",r='{\n    "input": {\n        "clientCode": "CDOC",\n        "supplierCode": "PDOC",\n        "hotelCode": "2",\n        "rateCode": "BAR",\n        "offers": [\n            {\n                "code": "TEST_OFFER",\n                "roomCodes": ["STD3"]\n            }\n        ]\n    }\n}',o="mutation ($input: InventoryOffersSetupCreateInput!) {\n  inventory {\n    createOffersSetup(offersSetupCreateInput: $input) {\n      offers {\n        code\n        description\n        isActive\n        rateCode\n        roomCodes\n        mon\n        tue\n        wed\n        thu\n        fri\n        sat\n        sun\n        applyFrom\n        applyTo\n        numberOfNights\n        minLos\n        maxLos\n        nightsType\n      }\n      success\n      adviseMessages {\n        code\n        description\n        level\n        external {\n          code\n          message\n        }\n      }\n    }\n  }\n}",i='{\n    "input": {\n        "clientCode": "CDOC",\n        "supplierCode": "PDOC",\n        "hotelCode": "2",\n        "rateCode": "BAR",\n        "offers": [\n            {\n                "code": "TEST_OFFER",\n                "description": "Test Offer",\n                "isActive": true,\n                "nightsType": "CHEAPEST",\n                "numberOfNights": 1,\n                "minLos": 7\n            }\n        ]\n    }\n}',p="mutation ($input: InventoryOffersSetupDeleteInput!) {\n  inventory {\n    deleteOffersSetup(offersSetupDeleteInput: $input) {\n      success\n      adviseMessages {\n        code\n        description\n        level\n        external {\n          code\n          message\n        }\n      }\n    }\n  }\n}",u='{\n    "input": {\n        "clientCode": "CDOC",\n        "supplierCode": "PDOC",\n        "hotelCode": "2",\n        "rateCode": "BAR",\n        "offerCodes": ["TEST_OFFER"] \n    }\n}'},21020:(e,n,t)=>{var s=t(96540),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,p=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,t){var s,o={},d=null,l=null;for(s in void 0!==t&&(d=""+t),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(l=n.ref),n)i.call(n,s)&&!u.hasOwnProperty(s)&&(o[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===o[s]&&(o[s]=n[s]);return{$$typeof:r,type:e,key:d,ref:l,props:o,_owner:p.current}}n.Fragment=o,n.jsx=d,n.jsxs=d},74848:(e,n,t)=>{e.exports=t(21020)},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>p});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);