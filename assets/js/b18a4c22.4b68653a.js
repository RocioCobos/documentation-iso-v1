/*! For license information please see b18a4c22.4b68653a.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[46694],{65591:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=t(74848),s=t(28453);const o={sidebar_position:1},i="API Endpoint",a={id:"apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests/endpoint",title:"API Endpoint",description:"One significant advantage of GraphQL is the simplicity of having a single endpoint for all operations. Regardless of whether you're in a testing or production environment, you can access the Inventory-Push methods effortlessly using this primary endpoint:",source:"@site/docs/apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests/endpoint.mdx",sourceDirName:"apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests",slug:"/apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests/endpoint",permalink:"/docs/apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests/endpoint",draft:!1,unlisted:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests/endpoint.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Quickstart",permalink:"/docs/apis/for-sellers/inventory-sellers/inventory-push-graphql-api/quickstart"},next:{title:"Request Headers",permalink:"/docs/apis/for-sellers/inventory-sellers/inventory-push-graphql-api/making-requests/request-headers"}},p={},l=[];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"api-endpoint",children:"API Endpoint"}),"\n",(0,r.jsx)(n.p,{children:"One significant advantage of GraphQL is the simplicity of having a single endpoint for all operations. Regardless of whether you're in a testing or production environment, you can access the Inventory-Push methods effortlessly using this primary endpoint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"https://api.travelgatex.com\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["If your servers are situated in ",(0,r.jsx)(n.strong,{children:"China"}),", we've got you covered to enhance your system's performance. You can utilize the following specialized endpoint:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"https://api-cn.travelgatex.com\n"})})]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},21020:(e,n,t)=>{var r=t(96540),s=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var r,o={},l=null,c=null;for(r in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(c=n.ref),n)i.call(n,r)&&!p.hasOwnProperty(r)&&(o[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===o[r]&&(o[r]=n[r]);return{$$typeof:s,type:e,key:l,ref:c,props:o,_owner:a.current}}n.Fragment=o,n.jsx=l,n.jsxs=l},74848:(e,n,t)=>{e.exports=t(21020)},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(96540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);